(dp1
S'output'
p2
S'<class \'psycopg2.IntegrityError\'> insert or update on table "paciente" violates foreign key constraint "paciente_created_by_fkey"\nDETAIL:  Key (created_by)=(1) is not present in table "auth_user".\n'
p3
sS'layer'
p4
S'C:\\web2py\\applications\\TurnoTaller\\controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a sample controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n#########################################################################\nfrom gluon.tools import Crud\ncrud = Crud(db)\n\nfrom datetime import date, timedelta\n\n #from datetime import time, timedelta\n\nimport datetime\nimport string\n#import yaml\n\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n\n    if you need a simple wiki simply replace the two lines below with:\n    return auth.wiki()\n    """\n    #response.flash = T("Hello World")\n    #return dict(message=T(\'Welcome to web2py!\'))\n    return dict()\n\ndef inicio():\n    return dict()\n\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/manage_users (requires membership in\n    http://..../[app]/default/user/bulk_register\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\ndef calendar2():\n    paciente_id=request.args(0)\n    paciente=db.paciente[paciente_id]\n    if paciente_id:\n       tasks=db(db.task.paciente==paciente_id)\\\n               (db.task.created_by==auth.user.id)\\\n               (db.task.start_time>=request.now).select()\n    else:\n       tasks=db(db.task.created_by==auth.user.id)\\\n               (db.task.start_time>=request.now).select()\n    return dict(tasks=tasks,paciente=paciente)\n\n#pagina principal despues del login\n@auth.requires_login()\ndef calendar():\n    #tasks=db(db.task).select()\n    #registros=db().select(\n    #    db.paciente.ALL, db.task.ALL,\n    #    left = db.paciente.on(db.paciente.id==db.task.paciente)&(db.task.created_by==1))\n    registros= db((db.paciente.id==db.task.paciente)&\n        (db.task.created_by==auth.user.id)).select()\n    return dict(registros=registros)\n    #tasks=db(db.task.start_time>=request.now).select()\n\n#agrego un nuevo paciente\n@auth.requires_login()\ndef abmPacientes():\n    #grid = SQLFORM.grid(db.paciente,field_id=None)\n    return dict(formulario=crud.create(db.paciente,next=\'getAllPacientes\',fields=[\'nombres\',\'apellidos\',\'dni\',\'fechaNac\',\'modelo\',\'domicilio\',\'telFijo\',\'celular\',\'email\'],message=\'Paciente Registrado con Exito\'))\n    return locals()\n\n#devuelve todos los pacientes de la bd\n@auth.requires_login()\ndef getAllPacientes():\n    #return dict()\n    registros = []\n    return dict(registros=registros)\n    #dato = int(request.vars[\'optionsRadios\'])\n    #if dato == 1: #todos\n    #    registros=db().select(\n    #    db.paciente.ALL, db.obraSocial.ALL,\n    #    left = db.obraSocial.on(db.paciente.obraSocial==db.obraSocial.id))\n    #elif dato == 2: #dni\n    #    campo = int(request.vars[\'input\'])\n    #    registros=db().select(\n    #    db.paciente.ALL, db.obraSocial.ALL,\n    #    left = db.obraSocial.on(db.paciente.obraSocial==db.obraSocial.id)&(db.paciente.dni==campo))\n\n@auth.requires_login()\ndef buscarPacientes():\n    #campo = request.vars[\'input\']\n    #registros=db().select(\n    #db.paciente.ALL, db.obraSocial.ALL,\n    #left = db.obraSocial.on(db.paciente.obraSocial==db.obraSocial.id)&(db.paciente.dni==campo))\n    if request.vars[\'optionsRadios\'] == \'1\' or request.vars[\'input\'] == \'\':\n        registros= db((db.paciente.modelo==db.modelo.id)).select()\n    if request.vars[\'optionsRadios\'] == \'2\':\n        registros= db((db.paciente.modelo==db.modelo.id)&(db.paciente.dni==request.vars[\'input\'])).select()\n    if request.vars[\'optionsRadios\'] == \'3\':\n        registros= db((db.paciente.modelo==db.modelo.id)&(db.paciente.apellidos.lower().contains((request.vars[\'input\']).lower()))).select()\n    if request.vars[\'optionsRadios\'] == \'4\':\n        registros= db((db.paciente.modelo==db.modelo.id)&(db.paciente.nombres.lower().contains((request.vars[\'input\']).lower()))).select()\n\n    #registros= db((db.paciente.obraSocial==db.obraSocial.id)&(db.paciente.dni==campo)).select()\n    #return dict(registros=registros)\n    context = dict(registros=registros)\n    return response.render(\'default/getAllPacientes.html\', context)\n\n    \n@auth.requires_login()\n@service.json\ndef getAllPacientesAjax2():\n    registros=db().select(\n        db.paciente.ALL, db.modelo.ALL,\n        left = db.modelo.on(db.paciente.modelo==db.modelo.id))\n    #return dict(registros=registros)\n    return response.json(registros)\n\ndef getAllPacientesAjax():\n    response.view=\'default/getAllPacientesAjax.html\'\n    return dict(message=T("Hello World"))\n\n\ndef allPacientes():\n    pacientes = db(db.paciente).select()\n    #turnosDelDia = db(db.task.start_time==request.now).select()\n    return dict(pacientes=pacientes)\n\n@auth.requires_login()\ndef editarPaciente():\n    #id = ((request.args(0)) or redirect(URL(\'calendar\'))\n    return dict(formulario=crud.update(db.paciente,(request.args(0)),next=\'getAllPacientes\',fields=[\'nombres\',\'apellidos\',\'dni\',\'fechaNac\',\'modelo\',\'domicilio\',\'telFijo\',\'celular\',\'email\'],message=\'Registro editado con Exito\'))\n    #crud.update(db.nombredelatabla, id)\n\n#devuelve todos los turnos del paciente ordenador por fecha desc NECESITA EL ID DEL PACIENTE\n@auth.requires_login()\ndef turnosDelPaciente():\n    paciente_id=request.args(0)\n    paciente = db.paciente(request.args(0))    \n    if paciente_id:\n       #turnos=db(db.task.paciente==paciente_id, orderby=~db.task.start_time)\n       #turnos=db().select(db.task.paciente==paciente_id)\n\n       #registros=db().select(\n       #db.auth_user.ALL, db.task.ALL,\n       #left = db.auth_user.on(db.paciente.id==db.task.paciente))\n       # return dict(registros=registros)\n\n       turnos=db(db.task.paciente==paciente_id).select(orderby=~db.task.start_time)\n\n       #turnos=db(db.task.paciente==paciente_id)\n       #turnos = db.executesql(\'SELECT * FROM task where task.id=;\')\n       return dict(paciente=paciente,turnos=turnos)\n       #return dict(paciente=paciente,registros=registros)\n\n@auth.requires_login()\ndef concluirTurno():\n    idpaciente = (request.args(1))\n    idturno = (request.args(0))\n    turno = db(db.task.id == idturno).select().first()\n    if (turno.concluido ):\n        resultado = db(db.task.id == idturno).update(concluido=False)\n    else:\n        resultado = db(db.task.id == idturno).update(concluido=True)\n    session.flash = \'Turno Actualizado con exito\'    \n    return redirect(URL(\'turnosDelPaciente\', args=(idpaciente)))\n\n@auth.requires_login()\ndef eliminarTurno():\n    idpaciente = (request.args(1))\n    idturno = (request.args(0))\n    resultado = db(db.task.id == idturno).delete()\n    session.flash = \'Turno eliminado con exito\'    \n    return redirect(URL(\'turnosDelPaciente\', args=(idpaciente)))    \n    \n    #return dict(formulario=crud.delete(db.task, request.args(0),next=\'getAllPacientes\',message=\'Registro eliminado con Exito\'))\n    #return locals()\n\n@auth.requires_login()\ndef editarTurnoCalendar():\n    idpaciente =(request.args(1))\n    #siguiente = crud.settings.update_next = URL(\'turnosDelPaciente\', args=(idpaciente))\n    encabezado = {\'start_time\': \'Fecha y Hora\'}\n    return dict(formulario=crud.update(db.task,(request.args(0)),fields=[\'start_time\',\'stop_time\',\'description\',\'nro_sesion\',\'concluido\'],next=\'calendar\',headers=encabezado,message=\'Registro editado con Exito\'))\n\n#editar turno del paciente\n@auth.requires_login()\ndef editarTurno():\n    idpaciente =(request.args(1))\n    siguiente = crud.settings.update_next = URL(\'turnosDelPaciente\', args=(idpaciente))\n    return dict(formulario=crud.update(db.task,(request.args(0)),fields=[\'title\',\'start_time\',\'stop_time\',\'description\',\'nro_sesion\',\'concluido\'],next=siguiente,message=\'Registro editado con Exito\'))\n    #redirect(URL(\'turnosDelPaciente\', args=(idpaciente)))\n    #return locals()\n    #crud.update(db.nombredelatabla, id)\n\n@auth.requires_login()\ndef crearTurno():\n    "lists all documents attached to a certain page"\n    paciente = db.paciente(request.args(0)) or redirect(URL(\'calendar\'))\n    db.task.paciente.default = paciente.id\n    form = crud.create(db.task)\n    #pagedocuments = db(db.document.page_id==this_page.id).select()\n    return dict(form=form)\n\n#funcion que devuelve un formulario para crear turnos recibe como parametro el id del paciente\n@auth.requires_login()\ndef turno_formulario():\n    paciente = db.paciente(request.args(0)) or redirect(URL(\'calendar\'))\n    #hoy=datetime.datetime.now()-timedelta(days=0)\n    #manana=date.today()+timedelta(days=1)\n    # 0 es equivalente a domingo y 6 equivale a sabado\n    #dia =  hoy.strftime(\'%w\')\n    #return dict(paciente=paciente,hoy=hoy,manana=manana,dia=dia)\n    return dict(paciente=paciente)\n\n#funcion que registra los turnos nuevos\n@auth.requires_login()\ndef agregarTurno():\n    paciente_id = request.vars[\'id\']    \n    nro_sesion = int(request.vars[\'nro_sesion\'])\n    duration = int(request.vars[\'duracion\'])\n    #nro = int(request.vars[\'nro_sesion\'])\n    nro = 1\n    fecha1 = datetime.datetime.strptime(request.vars[\'start_time\'], "%Y-%m-%dT%H:%M")\n    dia =  fecha1.strftime(\'%w\')\n    dia = int(dia)\n    #print request.vars[\'nro_sesion\']\n    valor = 1\n    rango = nro_sesion\n    if (dia == 0 or dia == 6):\n        session.flash = \'La fecha ingresada es incorrecta ya que es Sabado o Domingo\'        \n        redirect(URL(\'turno_formulario\', args=(paciente_id))) \n        #response.flash = \'La fecha ingresada es incorrecta ya que es Sabado o Domingo\'\n    else:\n        while valor <= rango:          \n            dia2 =  fecha1.strftime(\'%w\')\n            dia2 = int(dia2)\n            if (dia2 == 0 or dia2 == 6):\n                fecha1=fecha1+timedelta(days=1)\n                #valor = valor - 1\n            else:\n                id = db.task.insert(title="Turno",description=request.vars[\'description\'],duracion=duration,nro_sesion=nro,\n                start_time=fecha1,stop_time=fecha1+ timedelta(minutes=duration),paciente=request.vars[\'id\'])\n                fecha1=fecha1+timedelta(days=1)\n                nro += 1  \n                valor = valor + 1\n    #     #id=db(db.task.paciente==request.vars[\'paciente\']).select()\n        session.flash = \'Turno/s registrado/s con \xc3\xa9xito\'\n        redirect(URL(\'turnosDelPaciente\', args=(paciente_id)))   \n    # if dia == 0:\n    #     response.flash = \'La fecha ingresada es incorrecta ya que es Sabado o Domingo\'\n    #     redirect(URL(\'turno_formulario\', vars=dict(id=request.vars[\'id\']))) \n    # else:        \n    #     id = db.task.insert(title="Turno",description=request.vars[\'description\'],nro_sesion=request.vars[\'nro_sesion\'],\n    #         start_time=fecha1,stop_time=fecha1,paciente=request.vars[\'id\'])\n    #     #id=db(db.task.paciente==request.vars[\'paciente\']).select()\n    #     response.flash = \'Turno registrado con \xc3\xa9xito\'\n    #     return dict(formulario=crud.read(db.task,id))\n\n@auth.requires_login()\ndef agregarTurno2():\n    #print request.vars[\'id\']\n    print request.vars[\'description\']     \n\n\n#        Field(\'title\',\'string\'),\n#    Field(\'task_type\'),\n#    Field(\'paciente\',db.paciente),\n#    Field(\'description\',\'text\'),\n#    Field(\'start_time\',\'datetime\'),\n#    Field(\'stop_time\',\'datetime\'),\n#    Field(\'nro_sesion\',\'integer\',default=1),\n#    Field(\'concluido\',\'boolean\',default=False),\n#    Field(\'created_by\',db.auth_user,default=auth.user_id,writable=False,readable=False),\n#    Field(\'created_on\',\'datetime\',default=request.now,writable=False,readable=False)\n\nresponse._vars=response._caller(abmPacientes)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__module__'
p12
S"'psycopg2'"
p13
sS'__getslice__'
p14
S"<method-wrapper '__getslice__' of IntegrityError object>"
p15
sS'__str__'
p16
S"<method-wrapper '__str__' of IntegrityError object>"
p17
sS'__reduce__'
p18
S'<built-in method __reduce__ of IntegrityError object>'
p19
sS'__dict__'
p20
S'{}'
p21
sS'__sizeof__'
p22
S'<built-in method __sizeof__ of IntegrityError object>'
p23
sS'__weakref__'
p24
S'None'
p25
sS'__init__'
p26
S"<method-wrapper '__init__' of IntegrityError object>"
p27
sS'__setattr__'
p28
S"<method-wrapper '__setattr__' of IntegrityError object>"
p29
sS'__reduce_ex__'
p30
S'<built-in method __reduce_ex__ of IntegrityError object>'
p31
sS'__new__'
p32
S'<built-in method __new__ of type object>'
p33
sS'diag'
p34
S'<psycopg2._psycopg.Diagnostics object>'
p35
sS'__format__'
p36
S'<built-in method __format__ of IntegrityError object>'
p37
sS'__class__'
p38
S"<class 'psycopg2.IntegrityError'>"
p39
sS'pgerror'
p40
S'\'ERROR:  insert or update on table "paciente" vio...ted_by)=(1) is not present in table "auth_user".\\n\''
p41
sS'__doc__'
p42
S"'Error related to database integrity.'"
p43
sS'__getitem__'
p44
S"<method-wrapper '__getitem__' of IntegrityError object>"
p45
sS'__setstate__'
p46
S'<built-in method __setstate__ of IntegrityError object>'
p47
sS'__getattribute__'
p48
S"<method-wrapper '__getattribute__' of IntegrityError object>"
p49
sS'args'
p50
S'(\'insert or update on table "paciente" violates fo...ted_by)=(1) is not present in table "auth_user".\\n\',)'
p51
sS'__subclasshook__'
p52
S'<built-in method __subclasshook__ of type object>'
p53
sS'pgcode'
p54
S"'23503'"
p55
sS'__unicode__'
p56
S'<built-in method __unicode__ of IntegrityError object>'
p57
sS'cursor'
p58
S'<cursor object at 0x04402630; closed: 0>'
p59
sS'__delattr__'
p60
S"<method-wrapper '__delattr__' of IntegrityError object>"
p61
sS'__repr__'
p62
S"<method-wrapper '__repr__' of IntegrityError object>"
p63
sS'__hash__'
p64
S"<method-wrapper '__hash__' of IntegrityError object>"
p65
ssS'evalue'
p66
S'insert or update on table "paciente" violates foreign key constraint "paciente_created_by_fkey"\nDETAIL:  Key (created_by)=(1) is not present in table "auth_user".\n'
p67
sS'request'
p68
cgluon.html
XML_unpickle
p69
(S's1e\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">ajax</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">application</td><td style="vertical-align:top;">:</td><td><div>TurnoTaller</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cid</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">controller</td><td style="vertical-align:top;">:</td><td><div>default</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_admin</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-a75324df-8b9c-464d-b072-ae9fa99bb985<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_turnotaller</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-15ea4ad1-88e9-4826-a6f7-b630fdf3a0a2<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_welcome</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-7a9c234a-c6e0-4d94-a53a-41e45c635672<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">env</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">CONTENT_LENGTH</td><td style="vertical-align:top;">:</td><td><div>1255</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">CONTENT_TYPE</td><td style="vertical-align:top;">:</td><td><div>multipart/form-data; boundary=----WebKitFormBoundaryJpC1AUoSLfMC8Aac</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_ENCODING</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_LANGUAGE</td><td style="vertical-align:top;">:</td><td><div>es-ES,es;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CACHE_CONTROL</td><td style="vertical-align:top;">:</td><td><div>max-age=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONNECTION</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONTENT_LENGTH</td><td style="vertical-align:top;">:</td><td><div>1255</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONTENT_TYPE</td><td style="vertical-align:top;">:</td><td><div>multipart/form-data; boundary=----WebKitFormBoundaryJpC1AUoSLfMC8Aac</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_COOKIE</td><td style="vertical-align:top;">:</td><td><div>session_id_welcome=127.0.0.1-7a9c234a-c6e0-4d94-a53a-41e45c635672; session_id_admin=127.0.0.1-a75324df-8b9c-464d-b072-ae9fa99bb985; session_id_turnotaller=127.0.0.1-15ea4ad1-88e9-4826-a6f7-b630fdf3a0a2</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_HOST</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ORIGIN</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_REFERER</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000/TurnoTaller/default/abmPacientes</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_UPGRADE_INSECURE_REQUESTS</td><td style="vertical-align:top;">:</td><td><div>1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_USER_AGENT</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">PATH_INFO</td><td style="vertical-align:top;">:</td><td><div>/TurnoTaller/default/abmPacientes</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">QUERY_STRING</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_ADDR</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_PORT</td><td style="vertical-align:top;">:</td><td><div>46945</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REQUEST_METHOD</td><td style="vertical-align:top;">:</td><td><div>POST</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SCRIPT_NAME</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_NAME</td><td style="vertical-align:top;">:</td><td><div>walter</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PORT</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PROTOCOL</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_SOFTWARE</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;C:\\\\web2py\\\\applications\\\\admin\\\\&#x27;, &#x27;C:\\\\web2py\\\\applications\\\\welcome\\\\&#x27;, &#x27;C:\\\\web2py\\\\applications\\\\TurnoTaller\\\\&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>C:\\web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x2009738: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;fe80::7826:de9f:7c30:e2a3%6&#x27;, &#x27;fe80::3d3d:ec02:a5d9:f166%3&#x27;, &#x27;10.3.0.248&#x27;, &#x27;192.168.56.1&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;scheduler_groups&#x27;: None, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;walter&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;print_errors&#x27;: False, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;C:\\\\web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">content_length</td><td style="vertical-align:top;">:</td><td><div>1255</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">content_type</td><td style="vertical-align:top;">:</td><td><div>multipart/form-data; boundary=----WebKitFormBoundaryJpC1AUoSLfMC8Aac</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>C:\\web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_encoding</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_language</td><td style="vertical-align:top;">:</td><td><div>es-ES,es;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cache_control</td><td style="vertical-align:top;">:</td><td><div>max-age=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_connection</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_content_length</td><td style="vertical-align:top;">:</td><td><div>1255</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_content_type</td><td style="vertical-align:top;">:</td><td><div>multipart/form-data; boundary=----WebKitFormBoundaryJpC1AUoSLfMC8Aac</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cookie</td><td style="vertical-align:top;">:</td><td><div>session_id_welcome=127.0.0.1-7a9c234a-c6e0-4d94-a53a-41e45c635672; session_id_admin=127.0.0.1-a75324df-8b9c-464d-b072-ae9fa99bb985; session_id_turnotaller=127.0.0.1-15ea4ad1-88e9-4826-a6f7-b630fdf3a0a2</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_host</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_origin</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_referer</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000/TurnoTaller/default/abmPacientes</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_upgrade_insecure_requests</td><td style="vertical-align:top;">:</td><td><div>1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_user_agent</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>fe80::7826:de9f:7c30:e2a3%6</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>192.168.56.1</div></td></tr><tr><td><div>fe80::3d3d:ec02:a5d9:f166%3</div></td></tr><tr><td><div>10.3.0.248</div></td></tr><tr><td><div>127.0.0.1</div></td></tr><tr><td><div>walter</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path_info</td><td style="vertical-align:top;">:</td><td><div>/TurnoTaller/default/abmPacientes</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">query_string</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_addr</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_port</td><td style="vertical-align:top;">:</td><td><div>46945</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_method</td><td style="vertical-align:top;">:</td><td><div>POST</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_uri</td><td style="vertical-align:top;">:</td><td><div>/TurnoTaller/default/abmPacientes</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">script_name</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_name</td><td style="vertical-align:top;">:</td><td><div>walter</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_port</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_protocol</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_software</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_path</td><td style="vertical-align:top;">:</td><td><div>C:\\web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.12.3-stable+timestamp.2015.08.19.00.18.03</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x0045D0D0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x01FE2DC0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x04636DF0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x0045D0D0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x01FE2DC0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x04636DF0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">extension</td><td style="vertical-align:top;">:</td><td><div>html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">folder</td><td style="vertical-align:top;">:</td><td><div>C:\\web2py\\applications\\TurnoTaller\\</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">function</td><td style="vertical-align:top;">:</td><td><div>abmPacientes</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">global_settings</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;C:\\\\web2py\\\\applications\\\\admin\\\\&#x27;, &#x27;C:\\\\web2py\\\\applications\\\\welcome\\\\&#x27;, &#x27;C:\\\\web2py\\\\applications\\\\TurnoTaller\\\\&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>C:\\web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x2009738: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;fe80::7826:de9f:7c30:e2a3%6&#x27;, &#x27;fe80::3d3d:ec02:a5d9:f166%3&#x27;, &#x27;10.3.0.248&#x27;, &#x27;192.168.56.1&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;scheduler_groups&#x27;: None, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;walter&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;print_errors&#x27;: False, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;C:\\\\web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>C:\\web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>fe80::7826:de9f:7c30:e2a3%6</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>192.168.56.1</div></td></tr><tr><td><div>fe80::3d3d:ec02:a5d9:f166%3</div></td></tr><tr><td><div>10.3.0.248</div></td></tr><tr><td><div>127.0.0.1</div></td></tr><tr><td><div>walter</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.12.3-stable+timestamp.2015.08.19.00.18.03</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_https</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_local</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_restful</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_sheduler</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_shell</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">now</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2016, 9, 13, 17, 55, 45, 331000)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_args</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_extension</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">url</td><td style="vertical-align:top;">:</td><td><div>/TurnoTaller/default/abmPacientes</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">utcnow</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2016, 9, 13, 20, 55, 45, 331000)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi</td><td style="vertical-align:top;">:</td><td><div>&lt;gluon.main.LazyWSGI object at 0x04278910&gt;</div></td></tr></table></div>'
tRp70
sS'frames'
p71
(lp72
(dp73
S'file'
p74
S'C:\\web2py\\gluon\\restricted.py'
p75
sS'dump'
p76
(dp77
S'environment'
p78
S"{'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'AppConfig': <function AppConfig>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, ...}"
p79
sS'ccode'
p80
S'<code object <module> at 042823C8, file "C:\\web2...ons\\TurnoTaller\\controllers/default.py", line 10>'
p81
ssS'lnum'
p82
I227
sS'lines'
p83
(dp84
I224
S'            ccode = code'
p85
sI225
S'        else:'
p86
sI226
S'            ccode = compile2(code, layer)'
p87
sI227
S'        exec ccode in environment'
p88
sI228
S'    except HTTP:'
p89
sI229
S'        raise'
p90
sI230
S'    except RestrictedError:'
p91
sI231
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p92
sI222
S'    try:'
p93
sI223
S'        if isinstance(code, types.CodeType):'
p94
ssS'call'
p95
S"(code='# -*- coding: utf-8 -*-\\n# this file is released ...)\\n\\nresponse._vars=response._caller(abmPacientes)\\n', environment={'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'AppConfig': <function AppConfig>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, ...}, layer=r'C:\\web2py\\applications\\TurnoTaller\\controllers/default.py')"
p96
sS'func'
p97
S'restricted'
p98
sa(dp99
g74
S'C:\\web2py\\applications\\TurnoTaller\\controllers\\default.py'
p100
sg76
(dp101
sg82
I311
sg83
(dp102
I300
S"#        Field('title','string'),"
p103
sI301
S"#    Field('task_type'),"
p104
sI302
S"#    Field('paciente',db.paciente),"
p105
sI303
S"#    Field('description','text'),"
p106
sI304
S"#    Field('start_time','datetime'),"
p107
sI305
S"#    Field('stop_time','datetime'),"
p108
sI306
S"#    Field('nro_sesion','integer',default=1),"
p109
sI307
S"#    Field('concluido','boolean',default=False),"
p110
sI308
S"#    Field('created_by',db.auth_user,default=auth.user_id,writable=False,readable=False),"
p111
sI309
S"#    Field('created_on','datetime',default=request.now,writable=False,readable=False)"
p112
ssg95
S'()'
p113
sg97
S'<module>'
p114
sa(dp115
g74
S'C:\\web2py\\gluon\\globals.py'
p116
sg76
(dp117
S'self'
p118
S'undefined'
p119
sS'f'
S'<function abmPacientes>'
p120
ssg82
I412
sg83
(dp121
I416
S"        self.generic_patterns = ['*']"
p122
sI407
S"        self.flash = ''            # used by the default view layout"
p123
sI408
S'        self.meta = Storage()      # used by web2py_ajax.html'
p124
sI409
S'        self.menu = []             # used by the default view layout'
p125
sI410
S'        self.files = []            # used by web2py_ajax.html'
p126
sI411
S'        self._vars = None'
p127
sI412
S'        self._caller = lambda f: f()'
p128
sI413
S'        self._view_environment = None'
p129
sI414
S'        self._custom_commit = None'
p130
sI415
S'        self._custom_rollback = None'
p131
ssg95
S'(f=<function abmPacientes>)'
p132
sg97
S'<lambda>'
p133
sa(dp134
g74
S'C:\\web2py\\gluon\\tools.py'
p135
sg76
(dp136
S'action'
p137
S'<function abmPacientes>'
p138
sS'a'
S'()'
p139
sS'b'
g21
ssg82
I3774
sg83
(dp140
I3776
S'            f.__name__ = action.__name__'
p141
sI3777
S'            f.__dict__.update(action.__dict__)'
p142
sI3778
S'            return f'
p143
sI3769
S'                    flag = condition'
p144
sI3770
S'                if not flag:'
p145
sI3771
S'                    current.session.flash = self.messages.access_denied'
p146
sI3772
S'                    return call_or_redirect('
p147
sI3773
S'                        self.settings.on_failed_authorization)'
p148
sI3774
S'                return action(*a, **b)'
p149
sI3775
S'            f.__doc__ = action.__doc__'
p150
ssg95
S'(*a=(), **b={})'
p151
sg97
S'f'
sa(dp152
g74
S'C:\\web2py\\applications\\TurnoTaller\\controllers\\default.py'
p153
sg76
(dp154
S'global crud'
p155
S'<gluon.tools.Crud object>'
p156
sS'fields'
p157
g119
sS'builtinnext'
p158
S'<built-in function next>'
p159
sS'formulario'
p160
g119
sS'global db'
p161
S'<DAL uri="postgres:******@localhost:5432/TurnoTaller">'
p162
sS'crud.create'
p163
S'<bound method Crud.create of <gluon.tools.Crud object>>'
p164
sS'db.paciente'
p165
S'<Table paciente (id,nombres,apellidos,dni,fechaN...lio,telFijo,celular,email,created_by,created_on)>'
p166
sS'message'
p167
g119
sS'builtindict'
p168
S"<type 'dict'>"
p169
ssg82
I103
sg83
(dp170
I98
S''
sI99
S'#agrego un nuevo paciente'
p171
sI100
S'@auth.requires_login()'
p172
sI101
S'def abmPacientes():'
p173
sI102
S'    #grid = SQLFORM.grid(db.paciente,field_id=None)'
p174
sI103
S"    return dict(formulario=crud.create(db.paciente,next='getAllPacientes',fields=['nombres','apellidos','dni','fechaNac','modelo','domicilio','telFijo','celular','email'],message='Paciente Registrado con Exito'))"
p175
sI104
S'    return locals()'
p176
sI105
S''
sI106
S'#devuelve todos los pacientes de la bd'
p177
sI107
S'@auth.requires_login()'
p178
ssg95
S'()'
p179
sg97
S'abmPacientes'
p180
sa(dp181
g74
S'C:\\web2py\\gluon\\tools.py'
p182
sg76
(dp183
S'attributes'
p184
S"{'fields': ['id', 'nombres', 'apellidos', 'dni', 'fechaNac', 'modelo', 'domicilio', 'telFijo', 'celular', 'email']}"
p185
ssg82
I4492
sg83
(dp186
I4487
S'            onaccept=onaccept,'
p187
sI4488
S'            log=log,'
p188
sI4489
S'            message=message,'
p189
sI4490
S'            deletable=False,'
p190
sI4491
S'            formname=formname,'
p191
sI4492
S'            **attributes'
p192
sI4493
S'            )'
p193
sI4494
S''
sI4495
S'    def read(self, table, record):'
p194
sI4496
S'        if not (isinstance(table, Table) or table in self.db.tables) \\'
p195
ssg95
S"(self=<gluon.tools.Crud object>, table=<Table paciente (id,nombres,apellidos,dni,fechaN...lio,telFijo,celular,email,created_by,created_on)>, next='getAllPacientes', onvalidation=<Storage {}>, onaccept=<Storage {}>, log='Record %(id)s created', message='Paciente Registrado con Exito', formname=<function <lambda>>, **attributes={'fields': ['id', 'nombres', 'apellidos', 'dni', 'fechaNac', 'modelo', 'domicilio', 'telFijo', 'celular', 'email']})"
p196
sg97
S'create'
p197
sa(dp198
g74
S'C:\\web2py\\gluon\\tools.py'
p199
sg76
(dp200
S'detect_record_change'
p201
g119
sS'self'
p202
S'<gluon.tools.Crud object>'
p203
sS'self.settings'
p204
S"<Storage {'showid': False, 'delete_onaccept': <S...ble': True, 'create_onvalidation': <Storage {}>}>"
p205
sS'self.settings.detect_record_change'
p206
S'True'
p207
ssg82
I4438
sg83
(dp208
I4433
S'        if isinstance(onvalidation, StorageList):'
p209
sI4434
S'            onvalidation = onvalidation.get(table._tablename, [])'
p210
sI4435
S'        if form.accepts(request, _session, formname=_formname,'
p211
sI4436
S'                        onvalidation=onvalidation, keepvalues=keepvalues,'
p212
sI4437
S'                        hideerror=self.settings.hideerror,'
p213
sI4438
S'                        detect_record_change=self.settings.detect_record_change):'
p214
sI4439
S'            self.accepted = True'
p215
sI4440
S'            response.flash = message'
p216
sI4441
S'            if log:'
p217
sI4442
S'                self.log_event(log, form.vars)'
p218
ssg95
S"(self=<gluon.tools.Crud object>, table=<Table paciente (id,nombres,apellidos,dni,fechaN...lio,telFijo,celular,email,created_by,created_on)>, record=None, next='getAllPacientes', onvalidation=[], onaccept=<Storage {}>, ondelete=<Storage {}>, log='Record %(id)s created', message='Paciente Registrado con Exito', deletable=False, formname=<function <lambda>>, **attributes={'fields': ['id', 'nombres', 'apellidos', 'dni', 'fechaNac', 'modelo', 'domicilio', 'telFijo', 'celular', 'email'], 'hidden': {'_next': 'getAllPacientes'}})"
p219
sg97
S'update'
p220
sa(dp221
g74
S'C:\\web2py\\gluon\\sqlhtml.py'
p222
sg76
(dp223
S'self.vars.id'
p224
S'None'
p225
sS'fields'
p226
S"{'apellidos': 'valverdi', 'celular': '', 'created_on': datetime.datetime(2016, 9, 13, 17, 55, 45, 331000), 'dni': 4444, 'domicilio': '', 'email': '', 'fechaNac': None, 'modelo': 1, 'nombres': 'facundo', 'telFijo': ''}"
p227
sS'self'
p228
S'<gluon.sqlhtml.SQLFORM object>'
p229
sS'self.vars'
p230
S"<Storage {'telFijo': '', 'nombres': 'facundo', '...1', 'celular': '', 'email': '', 'domicilio': ''}>"
p231
sS'self.table.insert'
p232
S'<bound method Table.insert of <Table paciente (i...io,telFijo,celular,email,created_by,created_on)>>'
p233
sS'self.table'
p234
S'<Table paciente (id,nombres,apellidos,dni,fechaN...lio,telFijo,celular,email,created_by,created_on)>'
p235
ssg82
I1711
sg83
(dp236
I1706
S'                    self.vars.id = self.record[self.id_field_name]'
p237
sI1707
S'                    if fields:'
p238
sI1708
S'                        self.table._db(self.table._id == self.record['
p239
sI1709
S'                                       self.id_field_name]).update(**fields)'
p240
sI1710
S'                else:'
p241
sI1711
S'                    self.vars.id = self.table.insert(**fields)'
p242
sI1712
S'        self.accepted = ret'
p243
sI1713
S'        return ret'
p244
sI1714
S''
sI1715
S'    AUTOTYPES = {'
p245
ssg95
S"(self=<gluon.sqlhtml.SQLFORM object>, request_vars=<Storage {'telFijo': '', 'nombres': 'facundo', '...e', 'domicilio': '', '_next': 'getAllPacientes'}>, session=<Storage {'last_query': 'db.paciente.id>0', '_fo...gin]': ['856d90b2-d9e8-4845-ac5d-18bcc0691e33']}>, formname='paciente/None', keepvalues=False, onvalidation=[], dbio=True, hideerror=False, detect_record_change=True, **kwargs={})"
p246
sg97
S'accepts'
p247
sa(dp248
g74
S'C:\\web2py\\gluon\\packages\\dal\\pydal\\objects.py'
p249
sg76
(dp250
S'self._listify'
p251
S'<bound method Table._listify of <Table paciente ...io,telFijo,celular,email,created_by,created_on)>>'
p252
sS'fields'
p253
S"{'apellidos': 'valverdi', 'celular': '', 'created_by': 1L, 'created_on': datetime.datetime(2016, 9, 13, 17, 55, 45, 331000), 'dni': 4444, 'domicilio': '', 'email': '', 'fechaNac': None, 'modelo': 1, 'nombres': 'facundo', ...}"
p254
sS'self'
p255
S'<Table paciente (id,nombres,apellidos,dni,fechaN...lio,telFijo,celular,email,created_by,created_on)>'
p256
sS'ret'
p257
g119
sS'self._db._adapter'
p258
S'<pydal.adapters.postgres.PostgreSQLAdapter object>'
p259
sS'self._db._adapter.insert'
p260
S'<bound method PostgreSQLAdapter.insert of <pydal.adapters.postgres.PostgreSQLAdapter object>>'
p261
sS'self._db'
p262
S'<DAL uri="postgres:******@localhost:5432/TurnoTaller">'
p263
ssg82
I712
sg83
(dp264
I707
S'    def insert(self, **fields):'
p265
sI708
S'        fields = self._defaults(fields)'
p266
sI709
S'        self._attempt_upload(fields)'
p267
sI710
S'        if any(f(fields) for f in self._before_insert):'
p268
sI711
S'            return 0'
p269
sI712
S'        ret = self._db._adapter.insert(self, self._listify(fields))'
p270
sI713
S'        if ret and self._after_insert:'
p271
sI714
S'            fields = Row(fields)'
p272
sI715
S'            [f(fields, ret) for f in self._after_insert]'
p273
sI716
S'        return ret'
p274
ssg95
S"(self=<Table paciente (id,nombres,apellidos,dni,fechaN...lio,telFijo,celular,email,created_by,created_on)>, **fields={'apellidos': 'valverdi', 'celular': '', 'created_by': 1L, 'created_on': datetime.datetime(2016, 9, 13, 17, 55, 45, 331000), 'dni': 4444, 'domicilio': '', 'email': '', 'fechaNac': None, 'modelo': 1, 'nombres': 'facundo', ...})"
p275
sg97
S'insert'
p276
sa(dp277
g74
S'C:\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py'
p278
sg76
(dp279
S'e'
S'IntegrityError(\'insert or update on table "pacie...by)=(1) is not present in table "auth_user".\\n\',)'
p280
ssg82
I739
sg83
(dp281
I736
S'            e = sys.exc_info()[1]'
p282
sI737
S"            if hasattr(table,'_on_insert_error'):"
p283
sI738
S'                return table._on_insert_error(table,fields,e)'
p284
sI739
S'            raise e'
p285
sI740
S"        if hasattr(table, '_primarykey'):"
p286
sI741
S'            mydict = dict([(k[0].name, k[1]) for k in fields if k[0].name in table._primarykey])'
p287
sI742
S'            if mydict != {}:'
p288
sI743
S'                return mydict'
p289
sI734
S'            self.execute(query)'
p290
sI735
S'        except Exception:'
p291
ssg95
S"(self=<pydal.adapters.postgres.PostgreSQLAdapter object>, table=<Table paciente (id,nombres,apellidos,dni,fechaN...lio,telFijo,celular,email,created_by,created_on)>, fields=[(<pydal.objects.Field object>, ''), (<pydal.objects.Field object>, 'facundo'), (<pydal.objects.Field object>, 4444), (<pydal.objects.Field object>, 1L), (<pydal.objects.Field object>, 'valverdi'), (<pydal.objects.Field object>, datetime.datetime(2016, 9, 13, 17, 55, 45, 331000)), (<pydal.objects.Field object>, None), (<pydal.objects.Field object>, 1), (<pydal.objects.Field object>, ''), (<pydal.objects.Field object>, ''), (<pydal.objects.Field object>, '')])"
p292
sg97
g276
sasS'pyver'
p293
S'Python 2.7.9: C:\\web2py\\web2py.exe (prefix: )'
p294
sS'session'
p295
g69
(S's\x8f\n\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">auth</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">expiration</td><td style="vertical-align:top;">:</td><td><div>3600</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">hmac_key</td><td style="vertical-align:top;">:</td><td><div>eda67faf-cef8-45be-b3c7-0123c2b4bf66</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_visit</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2016, 9, 13, 17, 54, 40, 814000)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remember_me</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">user</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">email</td><td style="vertical-align:top;">:</td><td><div>wascasla@hotmail.com</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">first_name</td><td style="vertical-align:top;">:</td><td><div>admin</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">id</td><td style="vertical-align:top;">:</td><td><div>1L</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_name</td><td style="vertical-align:top;">:</td><td><div>admin</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">registration_id</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">registration_key</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">reset_password_key</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">username</td><td style="vertical-align:top;">:</td><td><div>admin</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">user_groups</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">1</td><td style="vertical-align:top;">:</td><td><div>admin</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_orderby</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_query</td><td style="vertical-align:top;">:</td><td><div>db.paciente.id&gt;0</div></td></tr></table></div>'
tRp296
sS'etype'
p297
S"<class 'psycopg2.IntegrityError'>"
p298
sS'date'
p299
S'Tue Sep 13 17:55:45 2016'
p300
sS'response'
p301
g69
(S's##\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">body</td><td style="vertical-align:top;">:</td><td><div>&lt;cStringIO.StringO object at 0x04278FA0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_turnotaller</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-15ea4ad1-88e9-4826-a6f7-b630fdf3a0a2<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div>/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">delimiters</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>{{</div></td></tr><tr><td><div>}}</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">files</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">form_label_separator</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">formstyle</td><td style="vertical-align:top;">:</td><td><div>bootstrap3_inline</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generic_patterns</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>*</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">google_analytics_id</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">headers</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">X-Powered-By</td><td style="vertical-align:top;">:</td><td><div>web2py</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">logo</td><td style="vertical-align:top;">:</td><td><div><a class="navbar-brand" href="#" id="web2py-logo"><b>Turno-Taller</b>&trade;&nbsp;</a></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">menu</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div><table><tr><td><div>Inicio</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/TurnoTaller/default/inicio</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Calendario</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/TurnoTaller/default/calendar</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Clientes</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/TurnoTaller/default/getAllPacientes</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Marca Vehiculo</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/TurnoTaller/marcaController/administrar_marca</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Modelo Vehiculo</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/TurnoTaller/modeloController/administrar_modelo</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Usuarios</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/TurnoTaller/userController/administrar_user</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Permisos Usuarios</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/TurnoTaller/userController/administrar_permisos</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">meta</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">author</td><td style="vertical-align:top;">:</td><td><div>Your Name &lt;you@example.com&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">description</td><td style="vertical-align:top;">:</td><td><div>a cool new app</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generator</td><td style="vertical-align:top;">:</td><td><div>Web2py Web Framework</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">keywords</td><td style="vertical-align:top;">:</td><td><div>web2py, python, framework</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">models_to_run</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>^\\w+\\.py$</div></td></tr><tr><td><div>^default/\\w+\\.py$</div></td></tr><tr><td><div>^default/abmPacientes/\\w+\\.py$</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">postprocessing</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_compression_level</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_expires</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_key</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_data_name</td><td style="vertical-align:top;">:</td><td><div>session_data_turnotaller</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_file</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;C:\\\\web2py\\\\applications\\\\TurnoTaller\\\\sessions\\\\0f1\\\\025\\\\127.0.0.1-15ea4ad1-88e9-4826-a6f7-b630fdf3a0a2&#x27;, mode &#x27;rb+&#x27; at 0x03970CD8&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_filename</td><td style="vertical-align:top;">:</td><td><div>C:\\web2py\\applications\\TurnoTaller\\sessions\\127.0.0.1-15ea4ad1-88e9-4826-a6f7-b630fdf3a0a2</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_hash</td><td style="vertical-align:top;">:</td><td><div>ea3266b66c80d555e351e5136a0e101a</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-15ea4ad1-88e9-4826-a6f7-b630fdf3a0a2</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_name</td><td style="vertical-align:top;">:</td><td><div>session_id_turnotaller</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_locked</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_masterapp</td><td style="vertical-align:top;">:</td><td><div>TurnoTaller</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_new</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_storage_type</td><td style="vertical-align:top;">:</td><td><div>file</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">status</td><td style="vertical-align:top;">:</td><td><div>200</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">subtitle</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">title</td><td style="vertical-align:top;">:</td><td><div>Turnotaller</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">view</td><td style="vertical-align:top;">:</td><td><div>default/abmPacientes.html</div></td></tr></table></div>'
tRp302
sS'locals'
p303
(dp304
S'query'
p305
S'"INSERT INTO paciente(telFijo,nombres,dni,created...16-09-13 17:55:45\',NULL,1,\'\',\'\',\'\') RETURNING id;"'
p306
sS'self'
p307
S'<pydal.adapters.postgres.PostgreSQLAdapter object>'
p308
sS'e'
S'IntegrityError(\'insert or update on table "pacie...by)=(1) is not present in table "auth_user".\\n\',)'
p309
sS'fields'
p310
S"[(<pydal.objects.Field object>, ''), (<pydal.objects.Field object>, 'facundo'), (<pydal.objects.Field object>, 4444), (<pydal.objects.Field object>, 1L), (<pydal.objects.Field object>, 'valverdi'), (<pydal.objects.Field object>, datetime.datetime(2016, 9, 13, 17, 55, 45, 331000)), (<pydal.objects.Field object>, None), (<pydal.objects.Field object>, 1), (<pydal.objects.Field object>, ''), (<pydal.objects.Field object>, ''), (<pydal.objects.Field object>, '')]"
p311
sS'table'
p312
S'<Table paciente (id,nombres,apellidos,dni,fechaN...lio,telFijo,celular,email,created_by,created_on)>'
p313
sssS'traceback'
p314
S'Traceback (most recent call last):\n  File "C:\\web2py\\gluon\\restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "C:\\web2py\\applications\\TurnoTaller\\controllers/default.py", line 311, in <module>\n  File "C:\\web2py\\gluon\\globals.py", line 412, in <lambda>\n    self._caller = lambda f: f()\n  File "C:\\web2py\\gluon\\tools.py", line 3774, in f\n    return action(*a, **b)\n  File "C:\\web2py\\applications\\TurnoTaller\\controllers/default.py", line 103, in abmPacientes\n    return dict(formulario=crud.create(db.paciente,next=\'getAllPacientes\',fields=[\'nombres\',\'apellidos\',\'dni\',\'fechaNac\',\'modelo\',\'domicilio\',\'telFijo\',\'celular\',\'email\'],message=\'Paciente Registrado con Exito\'))\n  File "C:\\web2py\\gluon\\tools.py", line 4492, in create\n    **attributes\n  File "C:\\web2py\\gluon\\tools.py", line 4438, in update\n    detect_record_change=self.settings.detect_record_change):\n  File "C:\\web2py\\gluon\\sqlhtml.py", line 1711, in accepts\n    self.vars.id = self.table.insert(**fields)\n  File "C:\\web2py\\gluon\\packages\\dal\\pydal\\objects.py", line 712, in insert\n    ret = self._db._adapter.insert(self, self._listify(fields))\n  File "C:\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 739, in insert\n    raise e\nIntegrityError: insert or update on table "paciente" violates foreign key constraint "paciente_created_by_fkey"\nDETAIL:  Key (created_by)=(1) is not present in table "auth_user".\n\n'
p315
s.